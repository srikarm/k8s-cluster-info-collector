version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_DB: cluster_info
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - cluster-info-net

  # Kafka Zookeeper
  zookeeper:
    image: apache/zookeeper:3.8.3
    container_name: zookeeper
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=localhost:2888:3888;2181
      ZOO_TICK_TIME: 2000
      ZOO_INIT_LIMIT: 10
      ZOO_SYNC_LIMIT: 5
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.2'
        reservations:
          memory: 128M
          cpus: '0.1'
    networks:
      - cluster-info-net

  # Kafka Broker
  kafka:
    image: apache/kafka:2.8.2-scala_2.13
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      # Performance optimizations for local development
      KAFKA_LOG_RETENTION_HOURS: 2
      KAFKA_LOG_SEGMENT_BYTES: 1073741824
      KAFKA_LOG_RETENTION_BYTES: 2147483648
      KAFKA_HEAP_OPTS: "-Xmx512M -Xms256M"
      KAFKA_NUM_PARTITIONS: 1
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
    deploy:
      resources:
        limits:
          memory: 768M
          cpus: '0.7'
        reservations:
          memory: 384M
          cpus: '0.3'
    networks:
      - cluster-info-net

  # Cluster Info Collector (Producer)
  collector:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: collector
    depends_on:
      - kafka
    environment:
      # Kafka Configuration
      KAFKA_ENABLED: "true"
      KAFKA_BROKERS: "kafka:29092"
      KAFKA_TOPIC: "cluster-info"
      KAFKA_PARTITION: "0"
      
      # Kubernetes Configuration
      KUBECONFIG: "/root/.kube/config"
      
      # Logging
      LOG_LEVEL: "info"
      LOG_FORMAT: "json"
    volumes:
      - ${HOME}/.kube:/root/.kube:ro
    networks:
      - cluster-info-net
    restart: unless-stopped
    command: ["/app/cluster-info-collector"]

  # Kafka Consumer (Database Writer)
  consumer:
    build:
      context: .
      dockerfile: Dockerfile.consumer
    container_name: consumer
    depends_on:
      - postgres
      - kafka
    environment:
      # Database Configuration
      DB_HOST: "postgres"
      DB_PORT: "5432"
      DB_USER: "postgres"
      DB_PASSWORD: "postgres"
      DB_NAME: "cluster_info"
      DB_SSL_MODE: "disable"
      
      # Kafka Configuration
      KAFKA_ENABLED: "true"
      KAFKA_BROKERS: "kafka:29092"
      KAFKA_TOPIC: "cluster-info"
      
      # Logging
      LOG_LEVEL: "info"
      LOG_FORMAT: "json"
    networks:
      - cluster-info-net
    restart: unless-stopped
    command: ["/app/consumer"]

volumes:
  postgres_data:

networks:
  cluster-info-net:
    driver: bridge
