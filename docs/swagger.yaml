
# --- BEGIN FULL REST API SWAGGER ---
openapi: 3.0.3
info:
  title: Cluster Info Collector API
  version: 1.0.0
  description: |
    REST API for Kubernetes Cluster Info Collector. Provides cluster resource, snapshot, stats, health, metrics, and WebSocket endpoints.
servers:
  - url: /api/v1
paths:
  /:
    get:
      summary: API root metadata
      description: Returns API metadata and available endpoints.
      responses:
        '200':
          description: API metadata
          content:
            application/json:
              schema:
                type: object
                properties:
                  service:
                    type: string
                  version:
                    type: string
                  commit:
                    type: string
                  endpoints:
                    type: array
                    items:
                      type: string
  /snapshots:
    get:
      summary: List cluster snapshots
      description: Returns a list of available cluster snapshots.
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 1000
          description: Maximum number of snapshots to return (default 50)
      responses:
        '200':
          description: List of snapshots
          content:
            application/json:
              schema:
                type: object
                properties:
                  snapshots:
                    type: array
                    items:
                      $ref: '#/components/schemas/SnapshotSummary'
                  count:
                    type: integer
  /snapshots/{id}:
    get:
      summary: Get snapshot by ID
      description: Returns a specific cluster snapshot by ID.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Snapshot data
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  timestamp:
                    type: string
                    format: date-time
                  cluster_info:
                    $ref: '#/components/schemas/ClusterInfo'
        '404':
          description: Snapshot not found
  /snapshots/latest:
    get:
      summary: Get latest snapshot
      description: Redirects to the latest snapshot by ID.
      responses:
        '302':
          description: Redirect to /snapshots/{id}
  /deployments:
    get:
      summary: List deployments
      description: Returns deployments from the latest snapshot.
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - in: query
          name: namespace
          schema:
            type: string
      responses:
        '200':
          description: List of deployments
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Deployment'
                  count:
                    type: integer
  /pods:
    get:
      summary: List pods
      description: Returns pods from the latest snapshot.
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - in: query
          name: namespace
          schema:
            type: string
      responses:
        '200':
          description: List of pods
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Pod'
                  count:
                    type: integer
  /nodes:
    get:
      summary: List nodes
      description: Returns nodes from the latest snapshot.
      responses:
        '200':
          description: List of nodes
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Node'
                  count:
                    type: integer
  /services:
    get:
      summary: List services
      description: Returns services from the latest snapshot.
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - in: query
          name: namespace
          schema:
            type: string
      responses:
        '200':
          description: List of services
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Service'
                  count:
                    type: integer
  /ingresses:
    get:
      summary: List ingresses
      description: Returns ingresses from the latest snapshot.
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - in: query
          name: namespace
          schema:
            type: string
      responses:
        '200':
          description: List of ingresses
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Ingress'
                  count:
                    type: integer
  /configmaps:
    get:
      summary: List configmaps
      description: Returns configmaps from the latest snapshot.
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - in: query
          name: namespace
          schema:
            type: string
      responses:
        '200':
          description: List of configmaps
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ConfigMap'
                  count:
                    type: integer
  /secrets:
    get:
      summary: List secrets
      description: Returns secrets from the latest snapshot.
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - in: query
          name: namespace
          schema:
            type: string
      responses:
        '200':
          description: List of secrets
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Secret'
                  count:
                    type: integer
  /persistent-volumes:
    get:
      summary: List persistent volumes
      description: Returns persistent volumes from the latest snapshot.
      responses:
        '200':
          description: List of persistent volumes
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/PersistentVolume'
                  count:
                    type: integer
  /persistent-volume-claims:
    get:
      summary: List persistent volume claims
      description: Returns persistent volume claims from the latest snapshot.
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - in: query
          name: namespace
          schema:
            type: string
      responses:
        '200':
          description: List of persistent volume claims
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/PersistentVolumeClaim'
                  count:
                    type: integer
  /ws:
    get:
      summary: WebSocket cluster updates
      description: WebSocket endpoint for real-time cluster updates.
      responses:
        '101':
          description: WebSocket upgrade
  /stats:
    get:
      summary: Cluster statistics
      description: Returns statistics about snapshots and resources.
      responses:
        '200':
          description: Statistics
          content:
            application/json:
              schema:
                type: object
  /stats/retention:
    get:
      summary: Retention statistics
      description: Returns database size and retention span.
      responses:
        '200':
          description: Retention stats
          content:
            application/json:
              schema:
                type: object
  /health:
    get:
      summary: Health check
      description: Returns health status of the API server and database.
      responses:
        '200':
          description: Health status
          content:
            application/json:
              schema:
                type: object
  /healthz:
    get:
      summary: Kubernetes health check
      description: Alias for /health.
      responses:
        '200':
          description: Health status
          content:
            application/json:
              schema:
                type: object
  /metrics:
    get:
      summary: Metrics
      description: Returns Go runtime and process metrics.
      responses:
        '200':
          description: Metrics
          content:
            application/json:
              schema:
                type: object
  /ready:
    get:
      summary: Readiness probe
      description: Returns readiness status for Kubernetes.
      responses:
        '200':
          description: Ready
          content:
            text/plain:
              schema:
                type: string
        '503':
          description: Not ready
          content:
            text/plain:
              schema:
                type: string
  /version:
    get:
      summary: Version info
      description: Returns version, commit hash, and Go version.
      responses:
        '200':
          description: Version info
          content:
            application/json:
              schema:
                type: object
                properties:
                  version:
                    type: string
                  commit_hash:
                    type: string
                  go_version:
                    type: string
                  service:
                    type: string
components:
  schemas:
    SnapshotSummary:
      type: object
      properties:
        id:
          type: integer
        timestamp:
          type: string
          format: date-time
        deployments:
          type: integer
        pods:
          type: integer
        nodes:
          type: integer
        services:
          type: integer
        ingresses:
          type: integer
        configmaps:
          type: integer
        secrets:
          type: integer
        persistent_volumes:
          type: integer
        persistent_volume_claims:
          type: integer
    ClusterInfo:
      type: object
      description: Cluster resource data (structure matches your models.ClusterInfo)
    Deployment:
      type: object
      properties:
        name:
          type: string
        namespace:
          type: string
        replicas:
          type: integer
        ready_replicas:
          type: integer
        created_time:
          type: string
          format: date-time
    Pod:
      type: object
      properties:
        name:
          type: string
        namespace:
          type: string
        phase:
          type: string
        node_name:
          type: string
        restart_count:
          type: integer
        created_time:
          type: string
          format: date-time
    Node:
      type: object
      properties:
        name:
          type: string
        ready:
          type: string
        cpu_capacity:
          type: string
        memory_capacity:
          type: string
        created_time:
          type: string
          format: date-time
    Service:
      type: object
      properties:
        name:
          type: string
        namespace:
          type: string
        type:
          type: string
        cluster_ip:
          type: string
        created_time:
          type: string
          format: date-time
    Ingress:
      type: object
      properties:
        name:
          type: string
        namespace:
          type: string
        hosts:
          type: array
          items:
            type: string
        created_time:
          type: string
          format: date-time
    ConfigMap:
      type: object
      properties:
        name:
          type: string
        namespace:
          type: string
        data_keys:
          type: array
          items:
            type: string
        created_time:
          type: string
          format: date-time
    Secret:
      type: object
      properties:
        name:
          type: string
        namespace:
          type: string
        type:
          type: string
        data_keys:
          type: array
          items:
            type: string
        created_time:
          type: string
          format: date-time
    PersistentVolume:
      type: object
      properties:
        name:
          type: string
        capacity:
          type: string
        access_modes:
          type: array
          items:
            type: string
        status:
          type: string
        storage_class:
          type: string
        created_time:
          type: string
          format: date-time
    PersistentVolumeClaim:
      type: object
      properties:
        name:
          type: string
        namespace:
          type: string
        requested_size:
          type: string
        access_modes:
          type: array
          items:
            type: string
        status:
          type: string
        created_time:
          type: string
          format: date-time
# --- END FULL REST API SWAGGER ---
